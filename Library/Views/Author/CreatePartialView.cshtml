@model Library.ViewModels.AuthorViewModels.AuthorUpdateViewModel

@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 class="text-center">New author</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, "First name", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, "Last name", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BirthDate, "Birth date", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DaiedDate, "Daied date", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.DaiedDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DaiedDate, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
        @Html.Label("Authors", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-7">
            @{

                if (Model != null)
                {
                    @(Html.Kendo().MultiSelect()
      .Name("AuthorsMultiSelect")
      .DataTextField("FullName")
      .DataValueField("Id")
      .BindTo((List<Library.ViewModels.AuthorViewModels.AuthorFullNameViewModel>)ViewData["Authors"])
      .Value(Model.Books)
                    )
                }
                
                              if (Model == null)
                              {
                                  @(Html.Kendo().MultiSelect()
                    .Name("AuthorsMultiSelect")
                    .DataTextField("FullName")
                    .DataValueField("Id")
                    .BindTo((List<Library.ViewModels.AuthorViewModels.AuthorFullNameViewModel>)ViewData["Authors"])
                                  )
                              }
            }
        </div>
    </div>*@

    <div class="form-group">
        <div class="col-md-offset-4 col-md-2">
            <button type="submit" class="btn btn-success"> <span class="glyphicon glyphicon-ok-circle"> </span> </button>
        </div>
    </div>
</div>