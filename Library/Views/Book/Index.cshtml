@using Library.ViewModels.BookViewModels
@using Library.ViewModels.AuthorViewModels
@using Library.Domain.Entities
@model IEnumerable<BookGetViewModel>
@{
    ViewBag.Title = "List of Books";
}

@(Html.Kendo().Grid(Model)
      .Name("Grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.Book.NameBook);
          columns.Template(@<text>
        @{
            foreach (Author a in item.Authors)
            {
                @a.FirstName
                <i>&nbsp;</i>
                @a.LastName <br />
            }
        }
        </text>).ClientTemplate("#=Books#").Title("Authors").Width(200);
          columns.Bound(c => c.Book.NumberPages).Width(100);
          columns.Bound(c => c.Book.DatePublishing).Width(100);
          columns.Bound(c => c.Book.PublishingCompany).Width(200);
          columns.Command(command =>
          {
              command.Edit().Text("Edit").UpdateText("Ok").CancelText("Cancel").HtmlAttributes(new { style = "height: 30px;" });
              command.Destroy().Text("Delete");
          })
              .Width(180);
      })
      .ToolBar(toolbar =>
      {
          toolbar.Create().Text("Add new book");
      })
      .Editable(editable => editable.Mode(GridEditMode.PopUp))
                .HtmlAttributes(new { style = "height: 650px;" })
      .Pageable()
      .Sortable(sortable =>
      {
          sortable.SortMode(GridSortMode.SingleColumn);
      })
      .Scrollable()
      .DataSource(dataSource => dataSource
        .Server()
        .Model(model => model.Id(p => p.Book.Id))
        .Read(read => read.Action("Index", "Book"))
        .Create("Create", "Book")
        .Update("Update", "Book")
        .Destroy("Delete", "Book")
      )
)
