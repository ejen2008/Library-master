


@model Library.ViewModels.BookViewModels.BookUpdateViewModel


@{
    ViewBag.Title = "Add new book";
}

<div class="col-md-offset-3 col-md-6 bg-info">
    @using (Html.BeginForm("Create", "Book", FormMethod.Post, new { @class = "col-xs-12 col-md-12 text-left" }))
            {

        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4 class="text-center">New book</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.NameBook, "Book title", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.NameBook, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NameBook, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumberPages, "Number pages", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.NumberPages, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumberPages, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DatePublishing, "Date publishing", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.DatePublishing, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DatePublishing, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PublishingCompany, "Publishing company", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.PublishingCompany, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PublishingCompany, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Authors", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-7">



                    @(Html.Kendo().MultiSelect()
          .Name("AuthorsMultiSelect")
          .DataTextField("FullName")
          .DataValueField("Id")
          .BindTo((List<Library.ViewModels.AuthorViewModels.AuthorFullNameViewModel>)ViewData["Authors"])
                    )

                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-4 col-md-2">
                    <button type="submit" class="btn btn-success"> <span class="glyphicon glyphicon-ok-circle"> </span> </button>
                </div>
            </div>
        </div>

    }


</div>
<div class="col-md-offset-8 col-md-1">
    @Html.ActionLink("Back", "Index", new { }, new { @class = "btn btn-default glyphicon glyphicon-hand-left" })
</div>




<script>
    $(document).ready(function () {
        var required = $("#Authors").data("kendoMultiSelect");

        $("#get").click(function () {
            alert("Attendees:\n\nRequired: " + required.value());
        });
    });
</script>