@model Library.ViewModels.JournalViewModels.JournalUpdateViewModel

@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4 class="text-center">Journal</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.NameJornal, "Title journal", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.NameJornal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NameJornal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumberPage, "Number pages", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.NumberPage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumberPage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DatePublishing, "Date publishing", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-7">
            @Html.EditorFor(model => model.DatePublishing, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DatePublishing, "", new { @class = "text-danger" })
        </div>
    </div>


    @*<div class="form-group">
            @Html.Label("Authors", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-7">
                @{

                    if (Model != null)
                    {
                        @(Html.Kendo().MultiSelect()
          .Name("AuthorsMultiSelect")
          .DataTextField("FullName")
          .DataValueField("Id")
          .BindTo((List<Library.ViewModels.AuthorViewModels.AuthorFullNameViewModel>)ViewData["Authors"])
          .Value(Model.Books)
                        )
                    }

                                  if (Model == null)
                                  {
                                      @(Html.Kendo().MultiSelect()
                        .Name("AuthorsMultiSelect")
                        .DataTextField("FullName")
                        .DataValueField("Id")
                        .BindTo((List<Library.ViewModels.AuthorViewModels.AuthorFullNameViewModel>)ViewData["Authors"])
                                      )
                                  }
                }
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-4 col-md-2">
            <button type="submit" class="btn btn-success"> <span class="glyphicon glyphicon-ok-circle"> </span> </button>
        </div>
    </div>
</div>